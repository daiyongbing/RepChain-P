// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package rep.protos.peer



/**
  * 交易
  *
  * @param chaincodeID
  *  store ChaincodeID as bytes so its encrypted value can be stored
  * @param payload
  *  bytes payload = 3;
  *  repeated ChaincodeSpec payload=3;
  * @param txid
  *  hash
  * @param cert
  *  目前将其改为cert对应公钥的短地址，为了减少数据大小
  */
@SerialVersionUID(0L)
final case class Transaction(
    `type`: rep.protos.peer.Transaction.Type = rep.protos.peer.Transaction.Type.UNDEFINED,
    chaincodeID: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    payload: scala.Option[rep.protos.peer.ChaincodeSpec] = None,
    metadata: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    txid: String = "",
    timestamp: scala.Option[com.google.protobuf.timestamp.Timestamp] = None,
    confidentialityLevel: rep.protos.peer.ConfidentialityLevel = rep.protos.peer.ConfidentialityLevel.LEVEL_UNDEFINED,
    confidentialityProtocolVersion: String = "",
    nonce: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    toValidators: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    cert: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    signature: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[Transaction] with com.trueaccord.lenses.Updatable[Transaction] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (`type` != rep.protos.peer.Transaction.Type.UNDEFINED) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(1, `type`.value) }
      if (chaincodeID != _root_.com.google.protobuf.ByteString.EMPTY) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(2, chaincodeID) }
      if (payload.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(payload.get.serializedSize) + payload.get.serializedSize }
      if (metadata != _root_.com.google.protobuf.ByteString.EMPTY) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(4, metadata) }
      if (txid != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(5, txid) }
      if (timestamp.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(timestamp.get.serializedSize) + timestamp.get.serializedSize }
      if (confidentialityLevel != rep.protos.peer.ConfidentialityLevel.LEVEL_UNDEFINED) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(7, confidentialityLevel.value) }
      if (confidentialityProtocolVersion != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(8, confidentialityProtocolVersion) }
      if (nonce != _root_.com.google.protobuf.ByteString.EMPTY) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(9, nonce) }
      if (toValidators != _root_.com.google.protobuf.ByteString.EMPTY) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(10, toValidators) }
      if (cert != _root_.com.google.protobuf.ByteString.EMPTY) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(11, cert) }
      if (signature != _root_.com.google.protobuf.ByteString.EMPTY) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(12, signature) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = `type`
        if (__v != rep.protos.peer.Transaction.Type.UNDEFINED) {
          _output__.writeEnum(1, __v.value)
        }
      };
      {
        val __v = chaincodeID
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(2, __v)
        }
      };
      payload.foreach { __v =>
        _output__.writeTag(3, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      {
        val __v = metadata
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(4, __v)
        }
      };
      {
        val __v = txid
        if (__v != "") {
          _output__.writeString(5, __v)
        }
      };
      timestamp.foreach { __v =>
        _output__.writeTag(6, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      {
        val __v = confidentialityLevel
        if (__v != rep.protos.peer.ConfidentialityLevel.LEVEL_UNDEFINED) {
          _output__.writeEnum(7, __v.value)
        }
      };
      {
        val __v = confidentialityProtocolVersion
        if (__v != "") {
          _output__.writeString(8, __v)
        }
      };
      {
        val __v = nonce
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(9, __v)
        }
      };
      {
        val __v = toValidators
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(10, __v)
        }
      };
      {
        val __v = cert
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(11, __v)
        }
      };
      {
        val __v = signature
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(12, __v)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): rep.protos.peer.Transaction = {
      var __type = this.`type`
      var __chaincodeID = this.chaincodeID
      var __payload = this.payload
      var __metadata = this.metadata
      var __txid = this.txid
      var __timestamp = this.timestamp
      var __confidentialityLevel = this.confidentialityLevel
      var __confidentialityProtocolVersion = this.confidentialityProtocolVersion
      var __nonce = this.nonce
      var __toValidators = this.toValidators
      var __cert = this.cert
      var __signature = this.signature
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __type = rep.protos.peer.Transaction.Type.fromValue(_input__.readEnum())
          case 18 =>
            __chaincodeID = _input__.readBytes()
          case 26 =>
            __payload = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __payload.getOrElse(rep.protos.peer.ChaincodeSpec.defaultInstance)))
          case 34 =>
            __metadata = _input__.readBytes()
          case 42 =>
            __txid = _input__.readString()
          case 50 =>
            __timestamp = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __timestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)))
          case 56 =>
            __confidentialityLevel = rep.protos.peer.ConfidentialityLevel.fromValue(_input__.readEnum())
          case 66 =>
            __confidentialityProtocolVersion = _input__.readString()
          case 74 =>
            __nonce = _input__.readBytes()
          case 82 =>
            __toValidators = _input__.readBytes()
          case 90 =>
            __cert = _input__.readBytes()
          case 98 =>
            __signature = _input__.readBytes()
          case tag => _input__.skipField(tag)
        }
      }
      rep.protos.peer.Transaction(
          `type` = __type,
          chaincodeID = __chaincodeID,
          payload = __payload,
          metadata = __metadata,
          txid = __txid,
          timestamp = __timestamp,
          confidentialityLevel = __confidentialityLevel,
          confidentialityProtocolVersion = __confidentialityProtocolVersion,
          nonce = __nonce,
          toValidators = __toValidators,
          cert = __cert,
          signature = __signature
      )
    }
    def withType(__v: rep.protos.peer.Transaction.Type): Transaction = copy(`type` = __v)
    def withChaincodeID(__v: _root_.com.google.protobuf.ByteString): Transaction = copy(chaincodeID = __v)
    def getPayload: rep.protos.peer.ChaincodeSpec = payload.getOrElse(rep.protos.peer.ChaincodeSpec.defaultInstance)
    def clearPayload: Transaction = copy(payload = None)
    def withPayload(__v: rep.protos.peer.ChaincodeSpec): Transaction = copy(payload = Some(__v))
    def withMetadata(__v: _root_.com.google.protobuf.ByteString): Transaction = copy(metadata = __v)
    def withTxid(__v: String): Transaction = copy(txid = __v)
    def getTimestamp: com.google.protobuf.timestamp.Timestamp = timestamp.getOrElse(com.google.protobuf.timestamp.Timestamp.defaultInstance)
    def clearTimestamp: Transaction = copy(timestamp = None)
    def withTimestamp(__v: com.google.protobuf.timestamp.Timestamp): Transaction = copy(timestamp = Some(__v))
    def withConfidentialityLevel(__v: rep.protos.peer.ConfidentialityLevel): Transaction = copy(confidentialityLevel = __v)
    def withConfidentialityProtocolVersion(__v: String): Transaction = copy(confidentialityProtocolVersion = __v)
    def withNonce(__v: _root_.com.google.protobuf.ByteString): Transaction = copy(nonce = __v)
    def withToValidators(__v: _root_.com.google.protobuf.ByteString): Transaction = copy(toValidators = __v)
    def withCert(__v: _root_.com.google.protobuf.ByteString): Transaction = copy(cert = __v)
    def withSignature(__v: _root_.com.google.protobuf.ByteString): Transaction = copy(signature = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => {
          val __t = `type`.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 2 => {
          val __t = chaincodeID
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 3 => payload.orNull
        case 4 => {
          val __t = metadata
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 5 => {
          val __t = txid
          if (__t != "") __t else null
        }
        case 6 => timestamp.orNull
        case 7 => {
          val __t = confidentialityLevel.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 8 => {
          val __t = confidentialityProtocolVersion
          if (__t != "") __t else null
        }
        case 9 => {
          val __t = nonce
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 10 => {
          val __t = toValidators
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 11 => {
          val __t = cert
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 12 => {
          val __t = signature
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PEnum(`type`.scalaValueDescriptor)
        case 2 => _root_.scalapb.descriptors.PByteString(chaincodeID)
        case 3 => payload.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 4 => _root_.scalapb.descriptors.PByteString(metadata)
        case 5 => _root_.scalapb.descriptors.PString(txid)
        case 6 => timestamp.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 7 => _root_.scalapb.descriptors.PEnum(confidentialityLevel.scalaValueDescriptor)
        case 8 => _root_.scalapb.descriptors.PString(confidentialityProtocolVersion)
        case 9 => _root_.scalapb.descriptors.PByteString(nonce)
        case 10 => _root_.scalapb.descriptors.PByteString(toValidators)
        case 11 => _root_.scalapb.descriptors.PByteString(cert)
        case 12 => _root_.scalapb.descriptors.PByteString(signature)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = rep.protos.peer.Transaction
}

object Transaction extends com.trueaccord.scalapb.GeneratedMessageCompanion[rep.protos.peer.Transaction] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[rep.protos.peer.Transaction] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): rep.protos.peer.Transaction = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    rep.protos.peer.Transaction(
      rep.protos.peer.Transaction.Type.fromValue(__fieldsMap.getOrElse(__fields.get(0), rep.protos.peer.Transaction.Type.UNDEFINED.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap.getOrElse(__fields.get(1), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.get(__fields.get(2)).asInstanceOf[scala.Option[rep.protos.peer.ChaincodeSpec]],
      __fieldsMap.getOrElse(__fields.get(3), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(4), "").asInstanceOf[String],
      __fieldsMap.get(__fields.get(5)).asInstanceOf[scala.Option[com.google.protobuf.timestamp.Timestamp]],
      rep.protos.peer.ConfidentialityLevel.fromValue(__fieldsMap.getOrElse(__fields.get(6), rep.protos.peer.ConfidentialityLevel.LEVEL_UNDEFINED.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap.getOrElse(__fields.get(7), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(8), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(9), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(10), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(11), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString]
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[rep.protos.peer.Transaction] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      rep.protos.peer.Transaction(
        rep.protos.peer.Transaction.Type.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(rep.protos.peer.Transaction.Type.UNDEFINED.scalaValueDescriptor).number),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).flatMap(_.as[scala.Option[rep.protos.peer.ChaincodeSpec]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).flatMap(_.as[scala.Option[com.google.protobuf.timestamp.Timestamp]]),
        rep.protos.peer.ConfidentialityLevel.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(7).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(rep.protos.peer.ConfidentialityLevel.LEVEL_UNDEFINED.scalaValueDescriptor).number),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(8).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(9).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(10).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(11).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(12).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = PeerProto.javaDescriptor.getMessageTypes.get(6)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = PeerProto.scalaDescriptor.messages(6)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 3 => __out = rep.protos.peer.ChaincodeSpec
      case 6 => __out = com.google.protobuf.timestamp.Timestamp
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => rep.protos.peer.Transaction.Type
      case 7 => rep.protos.peer.ConfidentialityLevel
    }
  }
  lazy val defaultInstance = rep.protos.peer.Transaction(
  )
  sealed trait Type extends _root_.com.trueaccord.scalapb.GeneratedEnum {
    type EnumType = Type
    def isUndefined: Boolean = false
    def isChaincodeDeploy: Boolean = false
    def isChaincodeInvoke: Boolean = false
    def isChaincodeQuery: Boolean = false
    def isChaincodeTerminate: Boolean = false
    def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] = rep.protos.peer.Transaction.Type
  }
  
  object Type extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] {
    implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[Type] = this
    @SerialVersionUID(0L)
    case object UNDEFINED extends Type {
      val value = 0
      val index = 0
      val name = "UNDEFINED"
      override def isUndefined: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CHAINCODE_DEPLOY extends Type {
      val value = 1
      val index = 1
      val name = "CHAINCODE_DEPLOY"
      override def isChaincodeDeploy: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CHAINCODE_INVOKE extends Type {
      val value = 2
      val index = 2
      val name = "CHAINCODE_INVOKE"
      override def isChaincodeInvoke: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CHAINCODE_QUERY extends Type {
      val value = 3
      val index = 3
      val name = "CHAINCODE_QUERY"
      override def isChaincodeQuery: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CHAINCODE_TERMINATE extends Type {
      val value = 4
      val index = 4
      val name = "CHAINCODE_TERMINATE"
      override def isChaincodeTerminate: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case class Unrecognized(value: Int) extends Type with _root_.com.trueaccord.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(UNDEFINED, CHAINCODE_DEPLOY, CHAINCODE_INVOKE, CHAINCODE_QUERY, CHAINCODE_TERMINATE)
    def fromValue(value: Int): Type = value match {
      case 0 => UNDEFINED
      case 1 => CHAINCODE_DEPLOY
      case 2 => CHAINCODE_INVOKE
      case 3 => CHAINCODE_QUERY
      case 4 => CHAINCODE_TERMINATE
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = rep.protos.peer.Transaction.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = rep.protos.peer.Transaction.scalaDescriptor.enums(0)
  }
  implicit class TransactionLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, rep.protos.peer.Transaction]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, rep.protos.peer.Transaction](_l) {
    def `type`: _root_.com.trueaccord.lenses.Lens[UpperPB, rep.protos.peer.Transaction.Type] = field(_.`type`)((c_, f_) => c_.copy(`type` = f_))
    def chaincodeID: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.chaincodeID)((c_, f_) => c_.copy(chaincodeID = f_))
    def payload: _root_.com.trueaccord.lenses.Lens[UpperPB, rep.protos.peer.ChaincodeSpec] = field(_.getPayload)((c_, f_) => c_.copy(payload = Some(f_)))
    def optionalPayload: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[rep.protos.peer.ChaincodeSpec]] = field(_.payload)((c_, f_) => c_.copy(payload = f_))
    def metadata: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.metadata)((c_, f_) => c_.copy(metadata = f_))
    def txid: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.txid)((c_, f_) => c_.copy(txid = f_))
    def timestamp: _root_.com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.timestamp.Timestamp] = field(_.getTimestamp)((c_, f_) => c_.copy(timestamp = Some(f_)))
    def optionalTimestamp: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.google.protobuf.timestamp.Timestamp]] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
    def confidentialityLevel: _root_.com.trueaccord.lenses.Lens[UpperPB, rep.protos.peer.ConfidentialityLevel] = field(_.confidentialityLevel)((c_, f_) => c_.copy(confidentialityLevel = f_))
    def confidentialityProtocolVersion: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.confidentialityProtocolVersion)((c_, f_) => c_.copy(confidentialityProtocolVersion = f_))
    def nonce: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.nonce)((c_, f_) => c_.copy(nonce = f_))
    def toValidators: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.toValidators)((c_, f_) => c_.copy(toValidators = f_))
    def cert: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.cert)((c_, f_) => c_.copy(cert = f_))
    def signature: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.signature)((c_, f_) => c_.copy(signature = f_))
  }
  final val TYPE_FIELD_NUMBER = 1
  final val CHAINCODEID_FIELD_NUMBER = 2
  final val PAYLOAD_FIELD_NUMBER = 3
  final val METADATA_FIELD_NUMBER = 4
  final val TXID_FIELD_NUMBER = 5
  final val TIMESTAMP_FIELD_NUMBER = 6
  final val CONFIDENTIALITYLEVEL_FIELD_NUMBER = 7
  final val CONFIDENTIALITYPROTOCOLVERSION_FIELD_NUMBER = 8
  final val NONCE_FIELD_NUMBER = 9
  final val TOVALIDATORS_FIELD_NUMBER = 10
  final val CERT_FIELD_NUMBER = 11
  final val SIGNATURE_FIELD_NUMBER = 12
}

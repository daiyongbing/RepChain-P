// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package rep.protos.peer



/** Carries the chaincode specification. This is the actual metadata required for
  * defining a chaincode.
  *
  * @param chaincodeID
  *  Type only support javascript 
  * @param secureContext
  *  绑定用户名（唯一的标识id）
  * @param codePackage
  *  for ChaincodeDeploymentSpec
  *  完整的代码内容（chaincode具体实现）
  */
@SerialVersionUID(0L)
final case class ChaincodeSpec(
    chaincodeID: scala.Option[rep.protos.peer.ChaincodeID] = None,
    ctorMsg: scala.Option[rep.protos.peer.ChaincodeInput] = None,
    timeout: Int = 0,
    secureContext: String = "",
    codePackage: _root_.com.google.protobuf.ByteString = _root_.com.google.protobuf.ByteString.EMPTY,
    ctype: rep.protos.peer.ChaincodeSpec.CodeType = rep.protos.peer.ChaincodeSpec.CodeType.CODE_UNDEFINED
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[ChaincodeSpec] with com.trueaccord.lenses.Updatable[ChaincodeSpec] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (chaincodeID.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(chaincodeID.get.serializedSize) + chaincodeID.get.serializedSize }
      if (ctorMsg.isDefined) { __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(ctorMsg.get.serializedSize) + ctorMsg.get.serializedSize }
      if (timeout != 0) { __size += _root_.com.google.protobuf.CodedOutputStream.computeInt32Size(3, timeout) }
      if (secureContext != "") { __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(4, secureContext) }
      if (codePackage != _root_.com.google.protobuf.ByteString.EMPTY) { __size += _root_.com.google.protobuf.CodedOutputStream.computeBytesSize(5, codePackage) }
      if (ctype != rep.protos.peer.ChaincodeSpec.CodeType.CODE_UNDEFINED) { __size += _root_.com.google.protobuf.CodedOutputStream.computeEnumSize(6, ctype.value) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): Unit = {
      chaincodeID.foreach { __v =>
        _output__.writeTag(1, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      ctorMsg.foreach { __v =>
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(_output__)
      };
      {
        val __v = timeout
        if (__v != 0) {
          _output__.writeInt32(3, __v)
        }
      };
      {
        val __v = secureContext
        if (__v != "") {
          _output__.writeString(4, __v)
        }
      };
      {
        val __v = codePackage
        if (__v != _root_.com.google.protobuf.ByteString.EMPTY) {
          _output__.writeBytes(5, __v)
        }
      };
      {
        val __v = ctype
        if (__v != rep.protos.peer.ChaincodeSpec.CodeType.CODE_UNDEFINED) {
          _output__.writeEnum(6, __v.value)
        }
      };
    }
    def mergeFrom(`_input__`: _root_.com.google.protobuf.CodedInputStream): rep.protos.peer.ChaincodeSpec = {
      var __chaincodeID = this.chaincodeID
      var __ctorMsg = this.ctorMsg
      var __timeout = this.timeout
      var __secureContext = this.secureContext
      var __codePackage = this.codePackage
      var __ctype = this.ctype
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __chaincodeID = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __chaincodeID.getOrElse(rep.protos.peer.ChaincodeID.defaultInstance)))
          case 18 =>
            __ctorMsg = Some(_root_.com.trueaccord.scalapb.LiteParser.readMessage(_input__, __ctorMsg.getOrElse(rep.protos.peer.ChaincodeInput.defaultInstance)))
          case 24 =>
            __timeout = _input__.readInt32()
          case 34 =>
            __secureContext = _input__.readString()
          case 42 =>
            __codePackage = _input__.readBytes()
          case 48 =>
            __ctype = rep.protos.peer.ChaincodeSpec.CodeType.fromValue(_input__.readEnum())
          case tag => _input__.skipField(tag)
        }
      }
      rep.protos.peer.ChaincodeSpec(
          chaincodeID = __chaincodeID,
          ctorMsg = __ctorMsg,
          timeout = __timeout,
          secureContext = __secureContext,
          codePackage = __codePackage,
          ctype = __ctype
      )
    }
    def getChaincodeID: rep.protos.peer.ChaincodeID = chaincodeID.getOrElse(rep.protos.peer.ChaincodeID.defaultInstance)
    def clearChaincodeID: ChaincodeSpec = copy(chaincodeID = None)
    def withChaincodeID(__v: rep.protos.peer.ChaincodeID): ChaincodeSpec = copy(chaincodeID = Some(__v))
    def getCtorMsg: rep.protos.peer.ChaincodeInput = ctorMsg.getOrElse(rep.protos.peer.ChaincodeInput.defaultInstance)
    def clearCtorMsg: ChaincodeSpec = copy(ctorMsg = None)
    def withCtorMsg(__v: rep.protos.peer.ChaincodeInput): ChaincodeSpec = copy(ctorMsg = Some(__v))
    def withTimeout(__v: Int): ChaincodeSpec = copy(timeout = __v)
    def withSecureContext(__v: String): ChaincodeSpec = copy(secureContext = __v)
    def withCodePackage(__v: _root_.com.google.protobuf.ByteString): ChaincodeSpec = copy(codePackage = __v)
    def withCtype(__v: rep.protos.peer.ChaincodeSpec.CodeType): ChaincodeSpec = copy(ctype = __v)
    def getFieldByNumber(__fieldNumber: Int): scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => chaincodeID.orNull
        case 2 => ctorMsg.orNull
        case 3 => {
          val __t = timeout
          if (__t != 0) __t else null
        }
        case 4 => {
          val __t = secureContext
          if (__t != "") __t else null
        }
        case 5 => {
          val __t = codePackage
          if (__t != _root_.com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 6 => {
          val __t = ctype.javaValueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => chaincodeID.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 2 => ctorMsg.map(_.toPMessage).getOrElse(_root_.scalapb.descriptors.PEmpty)
        case 3 => _root_.scalapb.descriptors.PInt(timeout)
        case 4 => _root_.scalapb.descriptors.PString(secureContext)
        case 5 => _root_.scalapb.descriptors.PByteString(codePackage)
        case 6 => _root_.scalapb.descriptors.PEnum(ctype.scalaValueDescriptor)
      }
    }
    override def toString: String = _root_.com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = rep.protos.peer.ChaincodeSpec
}

object ChaincodeSpec extends com.trueaccord.scalapb.GeneratedMessageCompanion[rep.protos.peer.ChaincodeSpec] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[rep.protos.peer.ChaincodeSpec] = this
  def fromFieldsMap(__fieldsMap: scala.collection.immutable.Map[_root_.com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): rep.protos.peer.ChaincodeSpec = {
    require(__fieldsMap.keys.forall(_.getContainingType() == javaDescriptor), "FieldDescriptor does not match message type.")
    val __fields = javaDescriptor.getFields
    rep.protos.peer.ChaincodeSpec(
      __fieldsMap.get(__fields.get(0)).asInstanceOf[scala.Option[rep.protos.peer.ChaincodeID]],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[rep.protos.peer.ChaincodeInput]],
      __fieldsMap.getOrElse(__fields.get(2), 0).asInstanceOf[Int],
      __fieldsMap.getOrElse(__fields.get(3), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(4), _root_.com.google.protobuf.ByteString.EMPTY).asInstanceOf[_root_.com.google.protobuf.ByteString],
      rep.protos.peer.ChaincodeSpec.CodeType.fromValue(__fieldsMap.getOrElse(__fields.get(5), rep.protos.peer.ChaincodeSpec.CodeType.CODE_UNDEFINED.javaValueDescriptor).asInstanceOf[_root_.com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber)
    )
  }
  implicit def messageReads: _root_.scalapb.descriptors.Reads[rep.protos.peer.ChaincodeSpec] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      rep.protos.peer.ChaincodeSpec(
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).flatMap(_.as[scala.Option[rep.protos.peer.ChaincodeID]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).flatMap(_.as[scala.Option[rep.protos.peer.ChaincodeInput]]),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(3).get).map(_.as[Int]).getOrElse(0),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(4).get).map(_.as[String]).getOrElse(""),
        __fieldsMap.get(scalaDescriptor.findFieldByNumber(5).get).map(_.as[_root_.com.google.protobuf.ByteString]).getOrElse(_root_.com.google.protobuf.ByteString.EMPTY),
        rep.protos.peer.ChaincodeSpec.CodeType.fromValue(__fieldsMap.get(scalaDescriptor.findFieldByNumber(6).get).map(_.as[_root_.scalapb.descriptors.EnumValueDescriptor]).getOrElse(rep.protos.peer.ChaincodeSpec.CodeType.CODE_UNDEFINED.scalaValueDescriptor).number)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = PeerProto.javaDescriptor.getMessageTypes.get(5)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = PeerProto.scalaDescriptor.messages(5)
  def messageCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 1 => __out = rep.protos.peer.ChaincodeID
      case 2 => __out = rep.protos.peer.ChaincodeInput
    }
    __out
  }
  def enumCompanionForFieldNumber(__fieldNumber: Int): _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    (__fieldNumber: @_root_.scala.unchecked) match {
      case 6 => rep.protos.peer.ChaincodeSpec.CodeType
    }
  }
  lazy val defaultInstance = rep.protos.peer.ChaincodeSpec(
  )
  sealed trait CodeType extends _root_.com.trueaccord.scalapb.GeneratedEnum {
    type EnumType = CodeType
    def isCodeUndefined: Boolean = false
    def isCodeJavascript: Boolean = false
    def isCodeScala: Boolean = false
    def companion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[CodeType] = rep.protos.peer.ChaincodeSpec.CodeType
  }
  
  object CodeType extends _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[CodeType] {
    implicit def enumCompanion: _root_.com.trueaccord.scalapb.GeneratedEnumCompanion[CodeType] = this
    @SerialVersionUID(0L)
    case object CODE_UNDEFINED extends CodeType {
      val value = 0
      val index = 0
      val name = "CODE_UNDEFINED"
      override def isCodeUndefined: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CODE_JAVASCRIPT extends CodeType {
      val value = 1
      val index = 1
      val name = "CODE_JAVASCRIPT"
      override def isCodeJavascript: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case object CODE_SCALA extends CodeType {
      val value = 2
      val index = 2
      val name = "CODE_SCALA"
      override def isCodeScala: Boolean = true
    }
    
    @SerialVersionUID(0L)
    case class Unrecognized(value: Int) extends CodeType with _root_.com.trueaccord.scalapb.UnrecognizedEnum
    
    lazy val values = scala.collection.Seq(CODE_UNDEFINED, CODE_JAVASCRIPT, CODE_SCALA)
    def fromValue(value: Int): CodeType = value match {
      case 0 => CODE_UNDEFINED
      case 1 => CODE_JAVASCRIPT
      case 2 => CODE_SCALA
      case __other => Unrecognized(__other)
    }
    def javaDescriptor: _root_.com.google.protobuf.Descriptors.EnumDescriptor = rep.protos.peer.ChaincodeSpec.javaDescriptor.getEnumTypes.get(0)
    def scalaDescriptor: _root_.scalapb.descriptors.EnumDescriptor = rep.protos.peer.ChaincodeSpec.scalaDescriptor.enums(0)
  }
  implicit class ChaincodeSpecLens[UpperPB](_l: _root_.com.trueaccord.lenses.Lens[UpperPB, rep.protos.peer.ChaincodeSpec]) extends _root_.com.trueaccord.lenses.ObjectLens[UpperPB, rep.protos.peer.ChaincodeSpec](_l) {
    def chaincodeID: _root_.com.trueaccord.lenses.Lens[UpperPB, rep.protos.peer.ChaincodeID] = field(_.getChaincodeID)((c_, f_) => c_.copy(chaincodeID = Some(f_)))
    def optionalChaincodeID: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[rep.protos.peer.ChaincodeID]] = field(_.chaincodeID)((c_, f_) => c_.copy(chaincodeID = f_))
    def ctorMsg: _root_.com.trueaccord.lenses.Lens[UpperPB, rep.protos.peer.ChaincodeInput] = field(_.getCtorMsg)((c_, f_) => c_.copy(ctorMsg = Some(f_)))
    def optionalCtorMsg: _root_.com.trueaccord.lenses.Lens[UpperPB, scala.Option[rep.protos.peer.ChaincodeInput]] = field(_.ctorMsg)((c_, f_) => c_.copy(ctorMsg = f_))
    def timeout: _root_.com.trueaccord.lenses.Lens[UpperPB, Int] = field(_.timeout)((c_, f_) => c_.copy(timeout = f_))
    def secureContext: _root_.com.trueaccord.lenses.Lens[UpperPB, String] = field(_.secureContext)((c_, f_) => c_.copy(secureContext = f_))
    def codePackage: _root_.com.trueaccord.lenses.Lens[UpperPB, _root_.com.google.protobuf.ByteString] = field(_.codePackage)((c_, f_) => c_.copy(codePackage = f_))
    def ctype: _root_.com.trueaccord.lenses.Lens[UpperPB, rep.protos.peer.ChaincodeSpec.CodeType] = field(_.ctype)((c_, f_) => c_.copy(ctype = f_))
  }
  final val CHAINCODEID_FIELD_NUMBER = 1
  final val CTORMSG_FIELD_NUMBER = 2
  final val TIMEOUT_FIELD_NUMBER = 3
  final val SECURECONTEXT_FIELD_NUMBER = 4
  final val CODE_PACKAGE_FIELD_NUMBER = 5
  final val CTYPE_FIELD_NUMBER = 6
}
